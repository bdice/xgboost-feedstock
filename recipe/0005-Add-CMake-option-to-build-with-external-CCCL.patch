From 1c5957a09f20e9d089e7be1333bf2d3ebbc6232e Mon Sep 17 00:00:00 2001
From: Hyunsu Cho <chohyu01@cs.washington.edu>
Date: Mon, 22 Jul 2024 12:20:10 -0700
Subject: [PATCH 1/4] Add CMake option to build with external CCCL

---
 CMakeLists.txt    | 8 ++++++++
 cmake/Utils.cmake | 5 +++++
 2 files changed, 13 insertions(+)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 034d52164ad2..fb1d82a75318 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -75,6 +75,7 @@ option(USE_NCCL  "Build with NCCL to enable distributed GPU support." OFF)
 # This is specifically designed for PyPI binary release and should be disabled for most of the cases.
 option(USE_DLOPEN_NCCL "Whether to load nccl dynamically." OFF)
 option(BUILD_WITH_SHARED_NCCL "Build with shared NCCL library." OFF)
+option(BUILD_WITH_EXTERNAL_CCCL "Build with external CCCL instead of one from CTK" OFF)
 
 if(USE_CUDA)
   if(NOT DEFINED CMAKE_CUDA_ARCHITECTURES AND NOT DEFINED ENV{CUDAARCHS})
@@ -221,6 +222,10 @@ if(USE_CUDA)
   add_subdirectory(${PROJECT_SOURCE_DIR}/gputreeshap)
 
   find_package(CUDAToolkit REQUIRED)
+
+  if(BUILD_WITH_EXTERNAL_CCCL)
+    find_package(CCCL REQUIRED CONFIG COMPONENTS cub)
+  endif()
 endif()
 
 if(FORCE_COLORED_OUTPUT AND (CMAKE_GENERATOR STREQUAL "Ninja") AND
@@ -427,6 +432,9 @@ else()
     set(INSTALL_TARGETS xgboost)
   endif()
 endif()
+if(BUILD_WITH_EXTERNAL_CCCL)
+  list(APPEND INSTALL_TARGETS _CUB_CUB _CUB_libcudacxx)
+endif()
 
 install(TARGETS ${INSTALL_TARGETS}
   EXPORT XGBoostTargets
diff --git a/cmake/Utils.cmake b/cmake/Utils.cmake
index 266cf29b38b2..6926f4f058a4 100644
--- a/cmake/Utils.cmake
+++ b/cmake/Utils.cmake
@@ -104,6 +104,11 @@ function(xgboost_set_cuda_flags target)
     target_compile_definitions(${target} PRIVATE -DXGBOOST_USE_NVTX=1)
   endif()
 
+  if(BUILD_WITH_EXTERNAL_CCCL)
+    target_compile_definitions(${target} PRIVATE -DTHRUST_IGNORE_CUB_VERSION_CHECK=1)
+    target_link_libraries(${target} PRIVATE CCCL::CUB)
+  endif()
+
   target_compile_definitions(${target} PRIVATE -DXGBOOST_USE_CUDA=1)
   target_include_directories(
     ${target} PRIVATE

From 9967f449e29e210e7231b540f0f31dc01d25d829 Mon Sep 17 00:00:00 2001
From: Hyunsu Cho <chohyu01@cs.washington.edu>
Date: Mon, 22 Jul 2024 12:51:24 -0700
Subject: [PATCH 2/4] Use all components

---
 CMakeLists.txt    | 4 ++--
 cmake/Utils.cmake | 2 +-
 2 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index fb1d82a75318..27834553d1c5 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -224,7 +224,7 @@ if(USE_CUDA)
   find_package(CUDAToolkit REQUIRED)
 
   if(BUILD_WITH_EXTERNAL_CCCL)
-    find_package(CCCL REQUIRED CONFIG COMPONENTS cub)
+    find_package(CCCL REQUIRED CONFIG)
   endif()
 endif()
 
@@ -433,7 +433,7 @@ else()
   endif()
 endif()
 if(BUILD_WITH_EXTERNAL_CCCL)
-  list(APPEND INSTALL_TARGETS _CUB_CUB _CUB_libcudacxx)
+  list(APPEND INSTALL_TARGETS _CUB_CUB _CUB_libcudacxx _Thrust_libcudacxx)
 endif()
 
 install(TARGETS ${INSTALL_TARGETS}
diff --git a/cmake/Utils.cmake b/cmake/Utils.cmake
index 6926f4f058a4..0a9da310b9a0 100644
--- a/cmake/Utils.cmake
+++ b/cmake/Utils.cmake
@@ -106,7 +106,7 @@ function(xgboost_set_cuda_flags target)
 
   if(BUILD_WITH_EXTERNAL_CCCL)
     target_compile_definitions(${target} PRIVATE -DTHRUST_IGNORE_CUB_VERSION_CHECK=1)
-    target_link_libraries(${target} PRIVATE CCCL::CUB)
+    target_link_libraries(${target} PRIVATE CCCL::CCCL)
   endif()
 
   target_compile_definitions(${target} PRIVATE -DXGBOOST_USE_CUDA=1)

From 4ac2b39ea81a14e402d513edda6fe0050313638b Mon Sep 17 00:00:00 2001
From: Hyunsu Cho <chohyu01@cs.washington.edu>
Date: Mon, 22 Jul 2024 14:59:01 -0700
Subject: [PATCH 3/4] Fallback to CTK CCCL

---
 CMakeLists.txt    | 11 ++++++-----
 cmake/Utils.cmake |  6 +-----
 2 files changed, 7 insertions(+), 10 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 27834553d1c5..362b00b43cee 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -75,7 +75,6 @@ option(USE_NCCL  "Build with NCCL to enable distributed GPU support." OFF)
 # This is specifically designed for PyPI binary release and should be disabled for most of the cases.
 option(USE_DLOPEN_NCCL "Whether to load nccl dynamically." OFF)
 option(BUILD_WITH_SHARED_NCCL "Build with shared NCCL library." OFF)
-option(BUILD_WITH_EXTERNAL_CCCL "Build with external CCCL instead of one from CTK" OFF)
 
 if(USE_CUDA)
   if(NOT DEFINED CMAKE_CUDA_ARCHITECTURES AND NOT DEFINED ENV{CUDAARCHS})
@@ -222,9 +221,11 @@ if(USE_CUDA)
   add_subdirectory(${PROJECT_SOURCE_DIR}/gputreeshap)
 
   find_package(CUDAToolkit REQUIRED)
-
-  if(BUILD_WITH_EXTERNAL_CCCL)
-    find_package(CCCL REQUIRED CONFIG)
+  find_package(CCCL)
+  if(NOT CCCL_FOUND)
+    message(STATUS "Standalone CCCL not found. Attempting to use CCCL from CTK...")
+    find_package(CCCL REQUIRED CONFIG
+      PATHS ${CUDAToolkit_LIBRARY_DIR}/cmake/cccl)
   endif()
 endif()
 
@@ -432,7 +433,7 @@ else()
     set(INSTALL_TARGETS xgboost)
   endif()
 endif()
-if(BUILD_WITH_EXTERNAL_CCCL)
+if(USE_CUDA)
   list(APPEND INSTALL_TARGETS _CUB_CUB _CUB_libcudacxx _Thrust_libcudacxx)
 endif()
 
diff --git a/cmake/Utils.cmake b/cmake/Utils.cmake
index 0a9da310b9a0..6ab337a206e3 100644
--- a/cmake/Utils.cmake
+++ b/cmake/Utils.cmake
@@ -104,11 +104,7 @@ function(xgboost_set_cuda_flags target)
     target_compile_definitions(${target} PRIVATE -DXGBOOST_USE_NVTX=1)
   endif()
 
-  if(BUILD_WITH_EXTERNAL_CCCL)
-    target_compile_definitions(${target} PRIVATE -DTHRUST_IGNORE_CUB_VERSION_CHECK=1)
-    target_link_libraries(${target} PRIVATE CCCL::CCCL)
-  endif()
-
+  target_link_libraries(${target} PRIVATE CCCL::CCCL)
   target_compile_definitions(${target} PRIVATE -DXGBOOST_USE_CUDA=1)
   target_include_directories(
     ${target} PRIVATE

From aea0977da3ad95dfa173200727a2c20284927fac Mon Sep 17 00:00:00 2001
From: Hyunsu Cho <chohyu01@cs.washington.edu>
Date: Mon, 22 Jul 2024 15:02:04 -0700
Subject: [PATCH 4/4] Use config

---
 CMakeLists.txt | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 362b00b43cee..895950cbfb78 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -221,7 +221,7 @@ if(USE_CUDA)
   add_subdirectory(${PROJECT_SOURCE_DIR}/gputreeshap)
 
   find_package(CUDAToolkit REQUIRED)
-  find_package(CCCL)
+  find_package(CCCL CONFIG)
   if(NOT CCCL_FOUND)
     message(STATUS "Standalone CCCL not found. Attempting to use CCCL from CTK...")
     find_package(CCCL REQUIRED CONFIG
