From 15b7012f54793f3cf807501453a61b6a6c1fb3c3 Mon Sep 17 00:00:00 2001
From: Philip Hyunsu Cho <chohyu01@cs.washington.edu>
Date: Tue, 23 Jul 2024 18:42:54 -0700
Subject: [PATCH] [CMake] Explicitly link with CCCL (standalone or CTK)
 (#10624)

---
 CMakeLists.txt    | 18 ++++++++++++++++++
 cmake/Utils.cmake |  5 ++---
 2 files changed, 20 insertions(+), 3 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index dc0f7e6..aa07840 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -224,6 +224,24 @@ if(USE_CUDA)
   add_subdirectory(${PROJECT_SOURCE_DIR}/gputreeshap)
 
   find_package(CUDAToolkit REQUIRED)
+  find_package(CCCL CONFIG)
+  if(NOT CCCL_FOUND)
+    message(STATUS "Standalone CCCL not found. Attempting to use CCCL from CUDA Toolkit...")
+    find_package(CCCL CONFIG
+      HINTS ${CUDAToolkit_LIBRARY_DIR}/cmake)
+    if(NOT CCCL_FOUND)
+      message(STATUS "Could not locate CCCL from CUDA Toolkit. Using Thrust and CUB from CUDA Toolkit...")
+      find_package(libcudacxx CONFIG REQUIRED
+        HINTS ${CUDAToolkit_LIBRARY_DIR}/cmake)
+      find_package(CUB CONFIG REQUIRED
+        HINTS ${CUDAToolkit_LIBRARY_DIR}/cmake)
+      find_package(Thrust CONFIG REQUIRED
+        HINTS ${CUDAToolkit_LIBRARY_DIR}/cmake)
+      thrust_create_target(Thrust HOST CPP DEVICE CUDA)
+      add_library(CCCL::CCCL INTERFACE IMPORTED GLOBAL)
+      target_link_libraries(CCCL::CCCL INTERFACE libcudacxx::libcudacxx CUB::CUB Thrust)
+    endif()
+  endif()
 endif()
 
 if(FORCE_COLORED_OUTPUT AND (CMAKE_GENERATOR STREQUAL "Ninja") AND
diff --git a/cmake/Utils.cmake b/cmake/Utils.cmake
index 8659df7..546359c 100644
--- a/cmake/Utils.cmake
+++ b/cmake/Utils.cmake
@@ -108,12 +108,11 @@ function(xgboost_set_cuda_flags target)
     target_compile_definitions(${target} PRIVATE -DXGBOOST_USE_NVTX=1)
   endif()
 
+  target_link_libraries(${target} INTERFACE CCCL::CCCL CUDA::toolkit)
   target_compile_definitions(${target} PRIVATE -DXGBOOST_USE_CUDA=1)
   target_include_directories(
     ${target} PRIVATE
-    ${xgboost_SOURCE_DIR}/gputreeshap
-    ${xgboost_SOURCE_DIR}/rabit/include
-    ${CUDAToolkit_INCLUDE_DIRS})
+    ${xgboost_SOURCE_DIR}/gputreeshap)
 
   if(MSVC)
     target_compile_options(${target} PRIVATE
